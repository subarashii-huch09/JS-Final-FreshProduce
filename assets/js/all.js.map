{"version":3,"sources":["all.js"],"names":["url","showList","document","querySelector","data","filterData","getData","axios","get","then","response","filter","item","作物名稱","renderData","showData","str","forEach","市場名稱","上價","中價","下價","平均價","交易量","innerHTML","buttonGroup","addEventListener","e","preventDefault","target","nodeName","tabs","querySelectorAll","classList","remove","type","dataset","種類代碼","add","search","inputCrop","keyword","value","trim","alert","match","length","select","selectChange","sort","a","b"],"mappings":"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","file":"all.js","sourcesContent":["// 步驟一： 抓取資料 ＆ 渲染全部資料\nconst url = \"https://hexschool.github.io/js-filter-data/data.json\"\nconst showList = document.querySelector(\".showList\");\nlet data =[]\nlet filterData = []\n\n\n// 使用axios 抓取資料\nfunction getData(){\n  axios.get(url).then(function(response){\n    data = response.data.filter((item) => item.作物名稱);\n    //資料裡面有個別資料的 \"作物名稱\" 是 null 型別。 我們使用 axios 獲取到的資料，不一定每筆資料都是有完整填寫的。有可能因為原始資料的缺漏，造成我們收集到不符合預期的資料，而產生錯誤。\n    //因此我們需要對 get 到的資料，進行數據處理。\n    //解決方法：\n    //第一種方法是在 get 資料時，就篩選出 \"作物名稱\" 確實有值的資料 (過濾掉空值、null、undefined)\n    // 使用 filter，先過濾作物名稱為 null 的資料\n    // data = response.data.filter(item => item.作物名稱)\n\n    // 增加條件判斷。第二種方法是在進行搜尋時，確保資料的 \"作物名稱\" 有值，讓 match 方法能夠正常運作。\n    // return (item.作物名稱 && item.作物名稱.match(crop.value.trim()))\n  })\n}\n\ngetData();\n\n\n//渲染資料\nfunction renderData(showData){\n  let str =\"\"\n  showData.forEach(function(item){\n    str += `\n    <tr>\n    <td>${item.作物名稱}</td>\n    <td>${item.市場名稱}</td>\n    <td>${item.上價}</td>\n    <td>${item.中價}</td>\n    <td>${item.下價}</td>\n    <td>${item.平均價}</td>\n    <td>${item.交易量}</td>\n    <tr>\n    `;\n  })\n\n  showList.innerHTML = str\n}\n\n//最後把 renderData 放進 getData 函式裡面\n\n\n//步驟二： 篩選資料/種類篩選（蔬菜，水果，或者是 花 ）\n\nconst buttonGroup = document.querySelector(\".button-group\");\n\nbuttonGroup.addEventListener(\"click\", function(e){\n  e.preventDefault()\n  if ( e.target.nodeName === \"BUTTON\"){\n\n    const tabs = document.querySelectorAll(\".button-group button\")\n    tabs.forEach(item => item.classList.remove(\"active\"))\n\n    let type = e.target.dataset.type\n    let filterData = [];\n\n    if (type === \"N04\"){\n      filterData = data.filter((item)=>item.種類代碼 === \"N04\")\n      e.target.classList.add(\"active\")\n      \n    } else if ( type === \"N05\"){\n      filterData = data.filter((item) =>item.種類代碼 === \"N05\")\n      e.target.classList.add(\"active\");\n     \n    } else if ( type === \"N06\"){\n      filterData = data.filter((item) =>item.種類代碼 === \"N06\")\n      e.target.classList.add(\"active\");\n      \n    }\n\n    renderData(filterData);\n  }\n\n  \n})\n\n\n// 步驟三： 搜尋資料\nconst search = document.querySelector(\".search\")\nconst inputCrop = document.querySelector(\"#crop\")\n\nsearch.addEventListener(\"click\",function(e){\n\n  if (e.target.nodeName === \"BUTTON\"){\n\n    let keyword = inputCrop.value.trim()\n\n    if ( keyword === \"\" || keyword === null ){\n      alert(\"請輸入正確資訊\")\n      return\n    }  \n\n    let filterData = [];\n    filterData = data.filter((item) => {return item.作物名稱.match(keyword)});\n      \n    \n    if (filterData.length === 0) {\n      showList.innerHTML = `\n      <tr><td colspan=\"6\" class=\"text-center p-3\">查詢不到交易資訊QQ</td></tr>`;\n    } else {\n      renderData(filterData);\n      keyword = \"\";\n    }\n  }\n})\n\n//步驟四：排序資料\nconst select = document.querySelector(\"#js-select\")\n\nselect.addEventListener(\"change\", function(e){\n  switch (select.value) {\n    case \"依上價排序\":\n      selectChange(\"上價\");\n      break;\n    case \"依中價排序\":\n      selectChange(\"中價\");\n      break;\n    case \"依下價排序\":\n      selectChange(\"下價\");\n      break;\n    case \"依平均價排序\":\n      selectChange(\"平均價\");\n      break;\n    case \"依交易量排序\":\n      selectChange(\"交易量\");\n      break;\n    default:\n      break\n  }\n});\n\n\nfunction selectChange(value) {\n  \n  filterData.sort((a, b) => {\n      return b[value] - a[value];\n    });\n  \n  renderData(filterData)\n}\n\n//步驟五：進階排序資料\n\n"]}